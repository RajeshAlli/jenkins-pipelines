pipeline {
    agent any

    stages {
        stage('Git integration') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-private', url: 'https://github.com/RajeshAlli/Mallesh-create-task.git']])
            }
        }
        stage('helm check') {
            steps {
                sh '''helm version
				      if [ $? == 0 ]
					  then
					    echo "Helm installed"
					  else
					    echo "Helm not installed"
						exit 1
					  fi
                '''
            }

        }
      
        stage('helm mariadb install') {
            steps {
                sh '''cd $WORKSPACE
                      helm upgrade --install devops-mariadb mariadb --values mariadb/createat-mariadb.yaml
					  helm status devops-mariadb
					  if  $? == 0 ]
					  then
					    echo "mariadb installed"
					  else
					    echo "mariadb not installed"
					  fi
					  '''
                
            }
            
        }
        stage('check pods') {
            steps {
                sh '''
                    kubectl get po -n database
                    
                '''
                
            }
            
        }
        stage('helm java install') {
            steps {
                sh '''cd $WORKSPACE
                      helm upgrade --install devops-java springboot --values springboot/create-task-java.yaml -n java
					  if  $? == 0 ]
					  then
					    echo "java installed"
					  else
					    echo "java not installed"
					  fi
					  '''
                
            }
            
        }
        stage('helm react install') {
            steps {
                sh '''cd $WORKSPACE/react-frontend
                      helm upgrade --install devops-react frontend --values frontend/frontend-values.yaml -n react
                      if  $? == 0 ]
					  then
					    echo "react installed"
					  else
					    echo "react not installed"
					  fi
					  '''
                
            }
            
        }
    }
}
