apiVersion: v1
kind: Namespace
metadata:
  name: pipeline-deployment
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92Mi8iOnsidXNlcm5hbWUiOiJhbGxpcmFqZXNoIiwicGFzc3dvcmQiOiJkb2NrZXJAMTIzIiwiZW1haWwiOiJhcmFqZXNoLmFsbGlAZ21haWwuY29tIiwiYXV0aCI6IllXeHNhWEpoYW1WemFEcGtiMk5yWlhKQU1USXoifX19
kind: Secret
metadata:
  name: pipeline
  namespace: pipeline-deployment
type: kubernetes.io/dockerconfigjson
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline
  namespace: pipeline-deployment
  labels:
    name: pipeline
spec:
  replicas: 3
  selector:
    matchLabels:
      name: pipeline
  template:
    metadata:
      labels:
        name: pipeline
    spec:
      volumes:
        - name: pipeline-volume
          configMap:
            name: pipeline-configmap
      containers:
        - name: Spring-v1
          image: allirajesh/rajesh:spring-v1
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: pipeline
        volumeMounts:
        # a mount for site-data
          - name: config
            mountPath: /usr/share/spring/html
            subPath: html
        # another mount for nginx config
          - name: config
            mountPath: /etc/spring/spring.conf
            subPath: spring.conf
      volumes:
        - name: pipeline-volumemount
          persistentVolumeClaim:
            claimName: pipeline-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pipeline
  labels:
    name: pipeline
  namespace: pipeline-deployment
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pipeline
  labels:
    name: pipeline
  namespace: pipeline-deployment
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi


