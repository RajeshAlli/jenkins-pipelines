apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/psp: eks.privileged
  creationTimestamp: "2023-03-28T08:27:30Z"
  generateName: rajesh-react-frontend-79469dfcb9-
  labels:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/name: frontend
    pod-template-hash: 79469dfcb9
  name: rajesh-react-frontend-79469dfcb9-cj9gv
  namespace: react
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: rajesh-react-frontend-79469dfcb9
    uid: fa536a0e-455d-4dff-aff6-a6b533774d88
  resourceVersion: "168897"
  uid: 4d321a20-c52d-4aa4-ba55-47176e1d57ca
spec:
  containers:
  - image: allirajesh/rajesh-react:react-v1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: frontend
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-rf2c2
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ip-10-0-2-246.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: rajesh-react-frontend
  serviceAccountName: rajesh-react-frontend
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-rf2c2
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:30Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:31Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:31Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:30Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://2de9489047bd23741a0a2cf5a13add1f7b0e23311dd99d8840a27766a9e9379f
    image: allirajesh/rajesh-react:react-v1
    imageID: docker-pullable://allirajesh/rajesh-react@sha256:7cf69fc245246db7f9d6a774f7f25f6b155219c1d922816c9faaca2667ed05b3
    lastState: {}
    name: frontend
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-28T08:27:31Z"
  hostIP: 10.0.2.246
  phase: Running
  podIP: 10.0.2.242
  podIPs:
  - ip: 10.0.2.242
  qosClass: BestEffort
  startTime: "2023-03-28T08:27:30Z"
  ---
  apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/psp: eks.privileged
  creationTimestamp: "2023-03-28T08:27:30Z"
  generateName: rajesh-react-frontend-79469dfcb9-
  labels:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/name: frontend
    pod-template-hash: 79469dfcb9
  name: rajesh-react-frontend-79469dfcb9-gnk66
  namespace: react
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: rajesh-react-frontend-79469dfcb9
    uid: fa536a0e-455d-4dff-aff6-a6b533774d88
  resourceVersion: "168916"
  uid: c3c0a390-5df0-4cd2-bb89-def35cac8303
spec:
  containers:
  - image: allirajesh/rajesh-react:react-v1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: frontend
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: http
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-k9d6q
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ip-10-0-2-22.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: rajesh-react-frontend
  serviceAccountName: rajesh-react-frontend
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-k9d6q
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:30Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:33Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:33Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-28T08:27:30Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://e5071aa95c7e8160904272a9a55ddb070346f0ba9e8c27b32d69cc4be09d2527
    image: allirajesh/rajesh-react:react-v1
    imageID: docker-pullable://allirajesh/rajesh-react@sha256:7cf69fc245246db7f9d6a774f7f25f6b155219c1d922816c9faaca2667ed05b3
    lastState: {}
    name: frontend
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-03-28T08:27:32Z"
  hostIP: 10.0.2.22
  phase: Running
  podIP: 10.0.2.45
  podIPs:
  - ip: 10.0.2.45
  qosClass: BestEffort
  startTime: "2023-03-28T08:27:30Z"
  ---
  apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: rajesh-react
    meta.helm.sh/release-namespace: react
  creationTimestamp: "2023-03-28T08:27:30Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frontend
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: frontend-0.1.0
  name: rajesh-react-frontend
  namespace: react
  resourceVersion: "168918"
  uid: cd13b25f-c1d7-4802-a772-baafaa8a8ab7
spec:
  clusterIP: 172.20.60.91
  clusterIPs:
  - 172.20.60.91
  externalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    nodePort: 31064
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/name: frontend
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: acd13b25fc1d74802a772baafaa8a8ab-1626504296.us-east-1.elb.amazonaws.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: rajesh-react
    meta.helm.sh/release-namespace: react
  creationTimestamp: "2023-03-28T08:27:30Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frontend
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: frontend-0.1.0
  name: rajesh-react-frontend
  namespace: react
  resourceVersion: "168922"
  uid: 55fff641-0e50-4175-a7d5-cfb4f5b8bf01
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: rajesh-react
      app.kubernetes.io/name: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: rajesh-react
        app.kubernetes.io/name: frontend
    spec:
      containers:
      - image: allirajesh/rajesh-react:react-v1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: frontend
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: rajesh-react-frontend
      serviceAccountName: rajesh-react-frontend
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2023-03-28T08:27:33Z"
    lastUpdateTime: "2023-03-28T08:27:33Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-03-28T08:27:30Z"
    lastUpdateTime: "2023-03-28T08:27:33Z"
    message: ReplicaSet "rajesh-react-frontend-79469dfcb9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "2"
    deployment.kubernetes.io/max-replicas: "3"
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: rajesh-react
    meta.helm.sh/release-namespace: react
  creationTimestamp: "2023-03-28T08:27:30Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: rajesh-react
    app.kubernetes.io/name: frontend
    pod-template-hash: 79469dfcb9
  name: rajesh-react-frontend-79469dfcb9
  namespace: react
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: rajesh-react-frontend
    uid: 55fff641-0e50-4175-a7d5-cfb4f5b8bf01
  resourceVersion: "168920"
  uid: fa536a0e-455d-4dff-aff6-a6b533774d88
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: rajesh-react
      app.kubernetes.io/name: frontend
      pod-template-hash: 79469dfcb9
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: rajesh-react
        app.kubernetes.io/name: frontend
        pod-template-hash: 79469dfcb9
    spec:
      containers:
      - image: allirajesh/rajesh-react:react-v1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: frontend
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: rajesh-react-frontend
      serviceAccountName: rajesh-react-frontend
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  fullyLabeledReplicas: 2
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
---